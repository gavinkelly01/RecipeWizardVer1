// Generated by view binder compiler. Do not edit!
package com.example.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigationHome;

  @NonNull
  public final ImageView featuredRecipeImage;

  @NonNull
  public final Button randomRecipeButton;

  @NonNull
  public final TextView recipeName;

  private ActivityHomeBinding(@NonNull RelativeLayout rootView,
      @NonNull BottomNavigationView bottomNavigationHome, @NonNull ImageView featuredRecipeImage,
      @NonNull Button randomRecipeButton, @NonNull TextView recipeName) {
    this.rootView = rootView;
    this.bottomNavigationHome = bottomNavigationHome;
    this.featuredRecipeImage = featuredRecipeImage;
    this.randomRecipeButton = randomRecipeButton;
    this.recipeName = recipeName;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation_home;
      BottomNavigationView bottomNavigationHome = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationHome == null) {
        break missingId;
      }

      id = R.id.featured_recipe_image;
      ImageView featuredRecipeImage = ViewBindings.findChildViewById(rootView, id);
      if (featuredRecipeImage == null) {
        break missingId;
      }

      id = R.id.random_recipe_button;
      Button randomRecipeButton = ViewBindings.findChildViewById(rootView, id);
      if (randomRecipeButton == null) {
        break missingId;
      }

      id = R.id.recipe_name;
      TextView recipeName = ViewBindings.findChildViewById(rootView, id);
      if (recipeName == null) {
        break missingId;
      }

      return new ActivityHomeBinding((RelativeLayout) rootView, bottomNavigationHome,
          featuredRecipeImage, randomRecipeButton, recipeName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
